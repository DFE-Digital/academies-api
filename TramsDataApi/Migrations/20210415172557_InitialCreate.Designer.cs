// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TramsDataApi.DatabaseModels;

namespace TramsDataApi.Migrations
{
    [DbContext(typeof(TramsDbContext))]
    [Migration("20210415172557_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TramsDataApi.DatabaseModels.Establishment", b =>
                {
                    b.Property<int>("Urn")
                        .HasColumnName("URN")
                        .HasColumnType("int");

                    b.Property<string>("Address3")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("AdministrativeWardCode")
                        .HasColumnName("AdministrativeWard (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("AdministrativeWardName")
                        .HasColumnName("AdministrativeWard (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("AdmissionsPolicyCode")
                        .HasColumnName("AdmissionsPolicy (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("AdmissionsPolicyName")
                        .HasColumnName("AdmissionsPolicy (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("BoardersCode")
                        .HasColumnName("Boarders (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("BoardersName")
                        .HasColumnName("Boarders (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("BoardingEstablishmentName")
                        .HasColumnName("BoardingEstablishment (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("BsoinspectorateNameName")
                        .HasColumnName("BSOInspectorateName (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CcfName")
                        .HasColumnName("CCF (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CensusAreaStatisticWardName")
                        .HasColumnName("CensusAreaStatisticWard (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CensusDate")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Chnumber")
                        .HasColumnName("CHNumber")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CloseDate")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CountryName")
                        .HasColumnName("Country (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CountyName")
                        .HasColumnName("County (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DateOfLastInspectionVisit")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DioceseCode")
                        .HasColumnName("Diocese (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DioceseName")
                        .HasColumnName("Diocese (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DistrictAdministrativeCode")
                        .HasColumnName("DistrictAdministrative (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DistrictAdministrativeName")
                        .HasColumnName("DistrictAdministrative (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Easting")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EbdName")
                        .HasColumnName("EBD (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EdByOtherName")
                        .HasColumnName("EdByOther (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EstablishmentAccreditedCode")
                        .HasColumnName("EstablishmentAccredited (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EstablishmentAccreditedName")
                        .HasColumnName("EstablishmentAccredited (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EstablishmentName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EstablishmentNumber")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EstablishmentStatusCode")
                        .HasColumnName("EstablishmentStatus (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EstablishmentStatusName")
                        .HasColumnName("EstablishmentStatus (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EstablishmentTypeGroupCode")
                        .HasColumnName("EstablishmentTypeGroup (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EstablishmentTypeGroupName")
                        .HasColumnName("EstablishmentTypeGroup (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("FederationFlagName")
                        .HasColumnName("FederationFlag (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("FederationsCode")
                        .HasColumnName("Federations (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("FederationsName")
                        .HasColumnName("Federations (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Feheidentifier")
                        .HasColumnName("FEHEIdentifier")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("FtprovName")
                        .HasColumnName("FTProv (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("FurtherEducationTypeName")
                        .HasColumnName("FurtherEducationType (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GenderCode")
                        .HasColumnName("Gender (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GenderName")
                        .HasColumnName("Gender (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GorCode")
                        .HasColumnName("GOR (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GorName")
                        .HasColumnName("GOR (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GsslacodeName")
                        .HasColumnName("GSSLACode (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("HeadFirstName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("HeadLastName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("HeadPreferredJobTitle")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("HeadTitleName")
                        .HasColumnName("HeadTitle (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("InspectorateNameName")
                        .HasColumnName("InspectorateName (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("InspectorateReport")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LaCode")
                        .HasColumnName("LA (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LaName")
                        .HasColumnName("LA (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LastChangedDate")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Locality")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LsoaCode")
                        .HasColumnName("LSOA (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LsoaName")
                        .HasColumnName("LSOA (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("MsoaCode")
                        .HasColumnName("MSOA (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("MsoaName")
                        .HasColumnName("MSOA (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("NextInspectionVisit")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Northing")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("NumberOfBoys")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("NumberOfGirls")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("NumberOfPupils")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("NurseryProvisionName")
                        .HasColumnName("NurseryProvision (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OfficialSixthFormCode")
                        .HasColumnName("OfficialSixthForm (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OfficialSixthFormName")
                        .HasColumnName("OfficialSixthForm (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OfstedLastInsp")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OfstedRatingName")
                        .HasColumnName("OfstedRating (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OfstedSpecialMeasuresCode")
                        .HasColumnName("OfstedSpecialMeasures (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OfstedSpecialMeasuresName")
                        .HasColumnName("OfstedSpecialMeasures (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OpenDate")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ParliamentaryConstituencyCode")
                        .HasColumnName("ParliamentaryConstituency (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ParliamentaryConstituencyName")
                        .HasColumnName("ParliamentaryConstituency (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PercentageFsm")
                        .HasColumnName("PercentageFSM")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PhaseOfEducationCode")
                        .HasColumnName("PhaseOfEducation (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PhaseOfEducationName")
                        .HasColumnName("PhaseOfEducation (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PlacesPru")
                        .HasColumnName("PlacesPRU")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Postcode")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PreviousEstablishmentNumber")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PreviousLaCode")
                        .HasColumnName("PreviousLA (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PreviousLaName")
                        .HasColumnName("PreviousLA (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PropsName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("QabnameCode")
                        .HasColumnName("QABName (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("QabnameName")
                        .HasColumnName("QABName (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Qabreport")
                        .HasColumnName("QABReport")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ReasonEstablishmentClosedCode")
                        .HasColumnName("ReasonEstablishmentClosed (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ReasonEstablishmentClosedName")
                        .HasColumnName("ReasonEstablishmentClosed (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ReasonEstablishmentOpenedCode")
                        .HasColumnName("ReasonEstablishmentOpened (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ReasonEstablishmentOpenedName")
                        .HasColumnName("ReasonEstablishmentOpened (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ReligiousCharacterCode")
                        .HasColumnName("ReligiousCharacter (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ReligiousCharacterName")
                        .HasColumnName("ReligiousCharacter (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ReligiousEthosName")
                        .HasColumnName("ReligiousEthos (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ResourcedProvisionCapacity")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ResourcedProvisionOnRoll")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("RscregionName")
                        .HasColumnName("RSCRegion (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SchoolCapacity")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SchoolSponsorFlagName")
                        .HasColumnName("SchoolSponsorFlag (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SchoolSponsorsName")
                        .HasColumnName("SchoolSponsors (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SchoolWebsite")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Section41ApprovedName")
                        .HasColumnName("Section41Approved (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen10Name")
                        .HasColumnName("SEN10 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen11Name")
                        .HasColumnName("SEN11 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen12Name")
                        .HasColumnName("SEN12 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen13Name")
                        .HasColumnName("SEN13 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen1Name")
                        .HasColumnName("SEN1 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen2Name")
                        .HasColumnName("SEN2 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen3Name")
                        .HasColumnName("SEN3 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen4Name")
                        .HasColumnName("SEN4 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen5Name")
                        .HasColumnName("SEN5 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen6Name")
                        .HasColumnName("SEN6 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen7Name")
                        .HasColumnName("SEN7 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen8Name")
                        .HasColumnName("SEN8 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Sen9Name")
                        .HasColumnName("SEN9 (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SenUnitCapacity")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SenUnitOnRoll")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SennoStat")
                        .HasColumnName("SENNoStat")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SenpruName")
                        .HasColumnName("SENPRU (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Senstat")
                        .HasColumnName("SENStat")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SiteName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SpecialClassesCode")
                        .HasColumnName("SpecialClasses (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SpecialClassesName")
                        .HasColumnName("SpecialClasses (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("StatutoryHighAge")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("StatutoryLowAge")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Street")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TeenMothName")
                        .HasColumnName("TeenMoth (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TeenMothPlaces")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TelephoneNum")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Town")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TrustSchoolFlagCode")
                        .HasColumnName("TrustSchoolFlag (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TrustSchoolFlagName")
                        .HasColumnName("TrustSchoolFlag (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TrustsCode")
                        .HasColumnName("Trusts (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TrustsName")
                        .HasColumnName("Trusts (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TypeOfEstablishmentCode")
                        .HasColumnName("TypeOfEstablishment (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TypeOfEstablishmentName")
                        .HasColumnName("TypeOfEstablishment (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TypeOfResourcedProvisionName")
                        .HasColumnName("TypeOfResourcedProvision (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Ukprn")
                        .HasColumnName("UKPRN")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Uprn")
                        .HasColumnName("UPRN")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("UrbanRuralCode")
                        .HasColumnName("UrbanRural (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("UrbanRuralName")
                        .HasColumnName("UrbanRural (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.HasKey("Urn");

                    b.ToTable("Establishment","gias");
                });

            modelBuilder.Entity("TramsDataApi.DatabaseModels.EstablishmentLink", b =>
                {
                    b.Property<string>("LinkEstablishedDate")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LinkName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LinkType")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LinkUrn")
                        .HasColumnName("LinkURN")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Urn")
                        .HasColumnName("URN")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.ToTable("EstablishmentLink","gias");
                });

            modelBuilder.Entity("TramsDataApi.DatabaseModels.Governance", b =>
                {
                    b.Property<string>("AppointingBody")
                        .HasColumnName("Appointing body")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CompaniesHouseNumber")
                        .HasColumnName("Companies House Number")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DateOfAppointment")
                        .HasColumnName("Date of appointment")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("DateTermOfOfficeEndsEnded")
                        .HasColumnName("Date term of office ends/ended")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Forename1")
                        .HasColumnName("Forename 1")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Forename2")
                        .HasColumnName("Forename 2")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Gid")
                        .HasColumnName("GID")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Role")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Surname")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Title")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Uid")
                        .HasColumnName("UID")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Urn")
                        .HasColumnName("URN")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.ToTable("Governance","gias");
                });

            modelBuilder.Entity("TramsDataApi.DatabaseModels.Group", b =>
                {
                    b.Property<string>("GroupUid")
                        .HasColumnName("Group UID")
                        .HasColumnType("varchar(900)")
                        .IsUnicode(false);

                    b.Property<string>("ClosedDate")
                        .HasColumnName("Closed Date")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CompaniesHouseNumber")
                        .HasColumnName("Companies House Number")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupContactAddress3")
                        .HasColumnName("Group Contact Address 3")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupContactCounty")
                        .HasColumnName("Group Contact County")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupContactLocality")
                        .HasColumnName("Group Contact Locality")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupContactPostcode")
                        .HasColumnName("Group Contact Postcode")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupContactStreet")
                        .HasColumnName("Group Contact Street")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupContactTown")
                        .HasColumnName("Group Contact Town")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupId")
                        .HasColumnName("Group ID")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupName")
                        .HasColumnName("Group Name")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupStatus")
                        .HasColumnName("Group Status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupStatusCode")
                        .HasColumnName("Group Status (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupType")
                        .HasColumnName("Group Type")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupTypeCode")
                        .HasColumnName("Group Type (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("HeadOfGroupFirstName")
                        .HasColumnName("Head of Group First Name")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("HeadOfGroupLastName")
                        .HasColumnName("Head of Group Last Name")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("HeadOfGroupTitle")
                        .HasColumnName("Head of Group Title")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("IncorporatedOnOpenDate")
                        .HasColumnName("Incorporated on (open date)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OpenDate")
                        .HasColumnName("Open date")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Ukprn")
                        .HasColumnName("UKPRN")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GroupUid");

                    b.ToTable("Group","gias");
                });

            modelBuilder.Entity("TramsDataApi.DatabaseModels.GroupLink", b =>
                {
                    b.Property<string>("ClosedDate")
                        .HasColumnName("Closed Date")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("CompaniesHouseNumber")
                        .HasColumnName("Companies House Number")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("EstablishmentName")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupId")
                        .HasColumnName("Group ID")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupName")
                        .HasColumnName("Group Name")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupStatus")
                        .HasColumnName("Group Status")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupStatusCode")
                        .HasColumnName("Group Status (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupType")
                        .HasColumnName("Group Type")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupTypeCode")
                        .HasColumnName("Group Type (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("GroupUid")
                        .HasColumnName("Group UID")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("IncorporatedOnOpenDate")
                        .HasColumnName("Incorporated on (open date)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("JoinedDate")
                        .HasColumnName("Joined date")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LaCode")
                        .HasColumnName("LA (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LaName")
                        .HasColumnName("LA (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("OpenDate")
                        .HasColumnName("Open date")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PhaseOfEducationCode")
                        .HasColumnName("PhaseOfEducation (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("PhaseOfEducationName")
                        .HasColumnName("PhaseOfEducation (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TypeOfEstablishmentCode")
                        .HasColumnName("TypeOfEstablishment (code)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("TypeOfEstablishmentName")
                        .HasColumnName("TypeOfEstablishment (name)")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("Urn")
                        .HasColumnName("URN")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.ToTable("GroupLink","gias");
                });

            modelBuilder.Entity("TramsDataApi.DatabaseModels.Sponsor", b =>
                {
                    b.Property<DateTime?>("ApprovalApplicationApprovedDate")
                        .HasColumnName("Approval.Application approved date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApprovalApplicationDate")
                        .HasColumnName("Approval.Application date")
                        .HasColumnType("date");

                    b.Property<string>("ApprovalDueDiligenceCheck")
                        .HasColumnName("Approval.Due diligence check")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ApprovalDueDiligenceComments")
                        .HasColumnName("Approval.Due diligence comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ApprovalEfaComments")
                        .HasColumnName("Approval.EFA comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ApprovalEfaDueDiligenceCheckDateCompleted")
                        .HasColumnName("Approval.EFA due diligence check date completed")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApprovalEfaDueDiligenceCheckDateSent")
                        .HasColumnName("Approval.EFA due diligence check date sent")
                        .HasColumnType("date");

                    b.Property<string>("ApprovalEfaDueDiligenceCheckStatus")
                        .HasColumnName("Approval.EFA due diligence check status")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ApprovalExpressionOfInterestDate")
                        .HasColumnName("Approval.Expression of interest date")
                        .HasColumnType("date");

                    b.Property<DateTime?>("ApprovalLastContactDate")
                        .HasColumnName("Approval.Last contact date")
                        .HasColumnType("date");

                    b.Property<string>("ApprovalSponsorRecruitmentEventAttendedIfApplicable")
                        .HasColumnName("Approval.Sponsor recruitment event attended (if applicable)")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ApprovalSponsorStatus")
                        .HasColumnName("Approval.Sponsor status")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ApprovalWithdrawalLedBy")
                        .HasColumnName("Approval.Withdrawal led by")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ApprovalWithdrawnDate")
                        .HasColumnName("Approval.Withdrawn date")
                        .HasColumnType("date");

                    b.Property<string>("LeadRscRegion")
                        .HasColumnName("Lead RSC Region")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("LocalAuthoritiesActive")
                        .HasColumnName("Local_Authorities_Active")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("LocalAuthoritiesProspective")
                        .HasColumnName("Local_Authorities_Prospective")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<DateTime?>("ManagementCapacityAndAssessmentReviewDate")
                        .HasColumnName("Management.Capacity and Assessment review date")
                        .HasColumnType("date");

                    b.Property<string>("ManagementCapacityAndGradeAssessmentComments")
                        .HasColumnName("Management.Capacity and grade assessment comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ManagementCapacityEastMidlandsAndHumber")
                        .HasColumnName("Management.Capacity East Midlands and Humber")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementCapacityEastOfEnglandAndNorthEastLondon")
                        .HasColumnName("Management.Capacity East of England and North East London")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementCapacityLancashireAndWestYorkshire")
                        .HasColumnName("Management.Capacity Lancashire and West Yorkshire")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementCapacityNorth")
                        .HasColumnName("Management.Capacity North")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementCapacityNorthWestLondonAndSouthCentral")
                        .HasColumnName("Management.Capacity North West London and South Central")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementCapacitySouthEastAndSouthLondon")
                        .HasColumnName("Management.Capacity South East and South London ")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementCapacitySouthWest")
                        .HasColumnName("Management.Capacity South West")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementCapacityWestMidlands")
                        .HasColumnName("Management.Capacity West Midlands")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementEngagementTypeEastMidlandsAndHumber")
                        .HasColumnName("Management.Engagement type East Midlands and Humber")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementEngagementTypeEastOfEnglandAndNorthEastLondon")
                        .HasColumnName("Management.Engagement type East of England and North East London")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementEngagementTypeLancashireAndWestYorkshire")
                        .HasColumnName("Management.Engagement type Lancashire and West Yorkshire")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementEngagementTypeNorth")
                        .HasColumnName("Management.Engagement type North")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementEngagementTypeNorthWestLondonAndSouthCentral")
                        .HasColumnName("Management.Engagement type North West London and South Central")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementEngagementTypeSouthEastAndSouthLondon")
                        .HasColumnName("Management.Engagement type South East and South London")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementEngagementTypeSouthWest")
                        .HasColumnName("Management.Engagement type South West")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementEngagementTypeWestMidlands")
                        .HasColumnName("Management.Engagement type West Midlands")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementLocalAuthorityS")
                        .HasColumnName("Management.Local Authority(s)")
                        .HasColumnType("varchar(1000)")
                        .HasMaxLength(1000)
                        .IsUnicode(false);

                    b.Property<string>("ManagementPriorityArea")
                        .HasColumnName("Management.Priority area")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementSponsorCoordinatorComments")
                        .HasColumnName("Management.Sponsor coordinator comments")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("ManagementSponsorMeetingsWithMinistersDate")
                        .HasColumnName("Management.Sponsor meetings with Ministers date")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ManagementSponsorMeetingsWithRscDate")
                        .HasColumnName("Management.Sponsor meetings with RSC date")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("PRid")
                        .HasColumnName("p_rid")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<string>("Rid")
                        .HasColumnName("RID")
                        .HasColumnType("varchar(11)")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<string>("SponsorCharacteristicsSecondOrderSponsorType")
                        .HasColumnName("Sponsor Characteristics.Second order sponsor type")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorCharacteristicsSponsorEducationalInstitutionCharacteristic")
                        .HasColumnName("Sponsor Characteristics.Sponsor Educational institution characteristic")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorCharacteristicsSponsorExpertisePrimary")
                        .HasColumnName("Sponsor Characteristics.Sponsor expertise – Primary")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorCharacteristicsSponsorExpertisePru")
                        .HasColumnName("Sponsor Characteristics.Sponsor expertise - PRU")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorCharacteristicsSponsorExpertiseSecondary")
                        .HasColumnName("Sponsor Characteristics.Sponsor expertise - Secondary")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorCharacteristicsSponsorExpertiseSpecial")
                        .HasColumnName("Sponsor Characteristics.Sponsor expertise - Special")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorCharacteristicsSponsorType")
                        .HasColumnName("Sponsor Characteristics.Sponsor type")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactAddressLine1")
                        .HasColumnName("Sponsor Contact Details.Contact address line 1")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactAddressLine2")
                        .HasColumnName("Sponsor Contact Details.Contact address line 2")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactAddressLine3")
                        .HasColumnName("Sponsor Contact Details.Contact address line 3")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactCounty")
                        .HasColumnName("Sponsor Contact Details.Contact county")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactEmail")
                        .HasColumnName("Sponsor Contact Details.Contact Email")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactLa")
                        .HasColumnName("Sponsor Contact Details.Contact LA")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactName")
                        .HasColumnName("Sponsor Contact Details.Contact name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactPhone")
                        .HasColumnName("Sponsor Contact Details.Contact phone")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactPosition")
                        .HasColumnName("Sponsor Contact Details.Contact position")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactPostcode")
                        .HasColumnName("Sponsor Contact Details.Contact postcode")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorContactDetailsContactTown")
                        .HasColumnName("Sponsor Contact Details.Contact town")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorId")
                        .HasColumnName("SponsorID")
                        .HasColumnType("varchar(7)")
                        .HasMaxLength(7)
                        .IsUnicode(false);

                    b.Property<string>("SponsorTemplateInformationCompanyNumber")
                        .HasColumnName("Sponsor template information.Company number")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorTemplateInformationFinance")
                        .HasColumnName("Sponsor template information.Finance")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SponsorTemplateInformationFuturePlans")
                        .HasColumnName("Sponsor template information.Future plans")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SponsorTemplateInformationGovernanceAndTrustBoardStructuresAndAccountabilityFramework")
                        .HasColumnName("Sponsor template information.Governance and Trust Board - structures and accountability framework")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SponsorTemplateInformationIssues")
                        .HasColumnName("Sponsor template information.Issues")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SponsorTemplateInformationKeyPeople")
                        .HasColumnName("Sponsor template information.Key people")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SponsorTemplateInformationSchoolImprovementStrategy")
                        .HasColumnName("Sponsor template information.School Improvement Strategy")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SponsorTemplateInformationSponsorOverview")
                        .HasColumnName("Sponsor template information.Sponsor overview")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<string>("SponsorsCoSponsorOrEducationalPartner")
                        .HasColumnName("Sponsors.Co-sponsor or educational partner")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsKs2MatQualityAssessment")
                        .HasColumnName("Sponsors.KS2 MAT Quality Assessment")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsKs4MatQualityAssessment")
                        .HasColumnName("Sponsors.KS4 MAT Quality Assessment")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsLeadContactForSponsor")
                        .HasColumnName("Sponsors.Lead contact for sponsor")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsLeadRscRegion")
                        .HasColumnName("Sponsors.Lead RSC Region")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsLinkToWorkplaces")
                        .HasColumnName("Sponsors.Link to Workplaces")
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<bool?>("SponsorsLoadOpenAcademiesProvisionallyWithThisSponsorThroughReSponsoring")
                        .HasColumnName("Sponsors.Load open academies provisionally with this sponsor through re–sponsoring")
                        .HasColumnType("bit");

                    b.Property<bool?>("SponsorsLoadOpenAcademiesWithThisSponsor")
                        .HasColumnName("Sponsors.Load open academies with this sponsor")
                        .HasColumnType("bit");

                    b.Property<bool?>("SponsorsLoadPipelineAcademiesProvisionallyWithThisSponsor")
                        .HasColumnName("Sponsors.Load pipeline academies provisionally with this sponsor")
                        .HasColumnType("bit");

                    b.Property<bool?>("SponsorsLoadPrePipelineAcademiesProvisionallyWithThisSponsor")
                        .HasColumnName("Sponsors.Load pre–pipeline academies provisionally with this sponsor")
                        .HasColumnType("bit");

                    b.Property<string>("SponsorsOtherMatQualityAssessment")
                        .HasColumnName("Sponsors.Other MAT Quality Assessment")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsOtherMatQualityAssessmentType")
                        .HasColumnName("Sponsors.Other MAT Quality Assessment Type")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsOverallCapacityForTheAcademicYear")
                        .HasColumnName("Sponsors.Overall capacity for the academic year")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("SponsorsPauseReviewDate")
                        .HasColumnName("Sponsors.Pause review date")
                        .HasColumnType("date");

                    b.Property<string>("SponsorsPreviousOrAlternativeName")
                        .HasColumnName("Sponsors.Previous or alternative name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsSponsorCoordinator")
                        .HasColumnName("Sponsors.Sponsor coordinator")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsSponsorId")
                        .HasColumnName("Sponsors.Sponsor id")
                        .HasColumnType("varchar(5)")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsSponsorName")
                        .HasColumnName("Sponsors.Sponsor name")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<DateTime?>("SponsorsSponsorPausedExitedDate")
                        .HasColumnName("Sponsors.Sponsor paused/exited date")
                        .HasColumnType("date");

                    b.Property<string>("SponsorsSponsorRestriction")
                        .HasColumnName("Sponsors.Sponsor restriction")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("SponsorsSponsorStatus")
                        .HasColumnName("Sponsors.Sponsor status")
                        .HasColumnType("varchar(100)")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.ToTable("Sponsor","ifd");
                });
#pragma warning restore 612, 618
        }
    }
}
