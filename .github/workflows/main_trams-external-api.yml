# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy to Development, PreProd and Production

on:
  push:
    branches:
      - main
      - create-academy-transfer-project
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: 'mcr.microsoft.com/mssql/server:2019-CU5-ubuntu-16.04'
        ports:
          - 1433:1433/tcp
        env:
          ACCEPT_EULA: 'Y'
          SA_PASSWORD: 'StrongPassword905'

    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.301'
      - name: Install EF for tests
        run: dotnet tool install --global dotnet-ef
      - name: Restore tools for tests
        run: dotnet tool restore
      - name: Create migrations for LegacyTramsDb
        run: dotnet ef migrations add INITIAL_MIGRATION --project TramsDataApi --context TramsDataApi.DatabaseModels.LegacyTramsDbContext -o Migrations/LegacyTramsDb
      - name: Restore dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build --no-restore
      - name: Test
        run: dotnet test --no-build --verbosity normal
  build:
    runs-on: windows-latest
    needs: test
    steps:
    - uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.301'

    - name: Install EF
      run: dotnet tool install --global dotnet-ef
      
    - name: Run migrations for TramsDb
      run: dotnet ef database update --project TramsDataApi --context TramsDataApi.DatabaseModels.TramsDbContext

    - name: Build with dotnet
      run: dotnet build --configuration Release

    - name: dotnet publish
      run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v2
      with:
        name: .net-app
        path: ${{env.DOTNET_ROOT}}/myapp

  deploy-to-dev:
    runs-on: windows-latest
    needs: build
    environment:
      name: 'production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v2
      with:
        name: .net-app

    - name: Deploy to Azure Web App
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: 'trams-external-api'
        slot-name: 'production'
        publish-profile: ${{ secrets.AzureAppService_PublishProfile_28b87edd019748f48c8b93fec502bc2c }}
        package: .
#  deploy-to-pp:
#    runs-on: windows-latest
#    needs: build
#    environment:
#      name: 'production'
#      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
#
#    steps:
#      - name: Download artifact from build job
#        uses: actions/download-artifact@v2
#        with:
#          name: .net-app
#
#      - name: Deploy to Azure Web App
#        id: deploy-to-webapp
#        uses: azure/webapps-deploy@v2
#        with:
#          app-name: 'trams-external-api-pp'
#          slot-name: 'production'
#          publish-profile: ${{ secrets.AzureAppService_PublishProfile_191bdb4fda494f5ca84257af75b77cac }}
#          package: .